设计模式：
1.设计模式6大原则：
	(1).开闭原则OCP：对扩展开放，对修改关闭。在程序需要进行扩展的时候，不能去修改原有的代码，
			这也是为了使程序的扩展性更好、易于升级和维护。
	(2).里氏代换原则LSP：里氏代换原则的程序表现就是：在程序中尽量使用基类类型来对对象进行定义，
			而在运行时再确定其子类类型，用子类对象来替换父类。
	(3).控制反转原则IOC：针对接口编程，依赖抽象而不依赖于具体。
	(4).接口隔离原则ISP：使用多个隔离的接口比用单个接口好。
	(5).迪米特法则DP：一个实体应当尽量少地与其他实体间发生相互作用，使得系统功能模块相对独立。
	(6).合成复用原则：尽量使用组合/聚合的方式，而不是使用继承。
2.简单工厂模式：简单工厂模式或者说工厂模式的关注点并不在于在工厂中是如何生产出来需要的类的，而在于将创建产品与消费产品分离。(解耦)
3.工厂方法模式：工厂方法模式是对简单工厂模式进一步抽象的结果。
	工厂方法模式是类的创建模式。工厂方法模式的用意是定义一个创建产品对象的工厂接口，将实际创建工厂推迟到子类中。
4.单例模式
	作为一种重要的设计模式，单例模式的好处有：
	(1)、控制资源的使用，通过线程同步来控制资源的并发访问
	(2)、控制实例的产生，以达到节约资源的目的
	(3)、控制数据的共享，在不建立直接关联的条件下，让多个不相关的进程或线程之间实现通信
